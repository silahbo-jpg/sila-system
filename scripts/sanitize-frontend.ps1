#!/usr/bin/env pwsh

# sanitize-frontend.ps1
# Sanitiza√ß√£o da raiz do frontend (m√∫ltiplos apps)
# Coordena limpeza de webapp, mobileapp, etc.

$StartTime = Get-Date
$FrontendPath = Join-Path $PSScriptRoot "..\frontend"
$LogPath = Join-Path $PSScriptRoot "..\reports\cleanup\frontend-sanitization.log"

if (-not (Test-Path $FrontendPath)) {
    Write-Host "‚ùå ERRO: Pasta 'frontend' n√£o encontrada" -ForegroundColor Red
    exit 1
}

function Write-Log { param([string]$Message) $t = Get-Date -Format "HH:mm:ss"; "[$t] $Message" | Tee-Object -FilePath $LogPath -Append }

Write-Log "üöÄ Iniciando sanitiza√ß√£o do frontend: $FrontendPath"

# === 1. Remover node_modules da raiz ===
$RootNodeModules = Join-Path $FrontendPath "node_modules"
if (Test-Path $RootNodeModules) {
    Remove-Item $RootNodeModules -Recurse -Force
    Write-Log "üóëÔ∏è Removido: node_modules (raiz)"
}

# === 2. Executar sanitiza√ß√£o de subapps (se existirem) ===
$SubApps = @("webapp", "mobileapp", "admin")
foreach ($app in $SubApps) {
    $appPath = Join-Path $FrontendPath $app
    $scriptPath = Join-Path $PSScriptRoot "sanitize-frontend-$app.ps1"
    if (Test-Path $appPath) {
        if (Test-Path $scriptPath) {
            Write-Log "üîÅ Executando script para: $app"
            & $scriptPath
        } else {
            Write-Log "‚ö†Ô∏è Script n√£o encontrado para: $app"
        }
    }
}

# === 3. Atualizar .gitignore geral ===
$GitIgnore = Join-Path $FrontendPath ".gitignore"
if (-not (Test-Path $GitIgnore)) {
    "@webapp\node_modules/" | Out-File -FilePath $GitIgnore -Encoding UTF8
    Write-Log "‚úÖ .gitignore criado"
}

# === 4. Resumo ===
$EndTime = Get-Date
$Duration = $EndTime - $StartTime
Write-Log "‚úÖ Sanitiza√ß√£o do frontend conclu√≠da em $($Duration.TotalSeconds)s"