# Convertido de check_backend_modules.sh por convert_shell_to_powershell.ps1\n\n<#\nEste script foi convertido automaticamente de um script shell (.sh) para PowerShell (.ps1).\nAlgumas convers√µes comuns foram aplicadas, mas √© prov√°vel que seja necess√°rio ajuste manual.\n\nConvers√µes aplicadas automaticamente:\n- Coment√°rios (# -> #)\n- Vari√°veis b√°sicas ( -> \)\n\nVerifique e ajuste manualmente:\n- Comandos espec√≠ficos do Linux (ls, grep, etc.) para equivalentes do PowerShell\n- Redirecionamentos de sa√≠da (>, >>, |)\n- Estruturas de controle (if, for, while)\n- Execu√ß√£o de comandos em sequ√™ncia (;, &&, ||)\n#>\n\n# #!/bin/bash\n\nBASE_DIR="backend/app/modules"\nEXPECTED_FILES=("crud.py" "models.py" "schemas.py")\nEXPECTED_DIRS=("routes" "tests")\n\nWrite-Host "üîé Verificando estrutura dos m√≥dulos em $BASE_DIR..."\n\nfor module in "$BASE_DIR"/*; do\n    [ -d "$module" ] || continue\nWrite-Host "üìÅ M√≥dulo: $(basename "$module")"\n\n    for file in "${EXPECTED_FILES[@]}"; do\n        if [ ! -f "$module/$file" ]; then\nWrite-Host "  ‚ùå Faltando arquivo: $file"\n        fi\n    done\n\n    for dir in "${EXPECTED_DIRS[@]}"; do\n        if [ ! -d "$module/$dir" ] && [ ! -f "$module/$dir.py" ]; then\nWrite-Host "  ‚ùå Faltando diret√≥rio ou arquivo: $dir"\n        fi\n    done\ndone \n\n# Fim do script convertido\n

