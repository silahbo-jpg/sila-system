[alembic]
# Path to folder containing migrations
script_location = alembic

# Template used to generate migration files
file_template = %%(rev)s_%%(slug)s

# Timezone to use when rendering the date within the migration file
# as well as the filename
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
timezone = UTC

# Max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# Set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# Version location specification; This defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat alembic/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# Configure the SQLAlchemy connect string
# This will be overridden by the settings.ASYNC_DATABASE_URL in env.py
# but needs to be here for alembic commands to work
sqlalchemy.url = postgresql+asyncpg://postgres:postgres@localhost:5432/sila_dev

# Logging configuration
[loggers]
keys = root, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname = root

[logger_sqlalchemy]
level = WARN
handlers = 
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S

# Post-write hooks to format and sort imports
[post_write_hooks]
# Format with black and sort imports with isort
hooks = black, isort

# Black configuration
black.type = console_scripts
black.entrypoint = black
black.options = -l 88

# isort configuration
isort.type = console_scripts
isort.entrypoint = isort
isort.options = --profile black

# Additional settings for autogenerate
[alembic:exclude]
# Tables to exclude from autogeneration
# tables = spatial_ref_sys, geospatial_columns, geometry_columns

# Additional context for migration generation
[alembic:context]
# Custom template variables
# template_vars = {"myvar": 123}

# Custom migration context
# context = {"custom_context": "value"}

# Custom migration context as callable
# context_callable = myapp.db.migration_context

# Transactional DDL (default: None means autodetect)
# transactional_ddl = None

# Run start inside transaction (default: None means autodetect)
# transaction_per_migration = None

# Run for an 'offline' mode (default: False)
# offline_mode = False
