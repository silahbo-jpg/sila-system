"""${message}

Revision ID: ${up_revision}
Revises: ${down_revision | comma,n}
Create Date: ${create_date}

"""
from __future__ import annotations

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

${imports if imports else ""}

# revision identifiers, used by Alembic.
revision = ${repr(up_revision)}
down_revision = ${repr(down_revision)}
branch_labels = ${repr(branch_labels)}
depends_on = ${repr(depends_on)}


def upgrade(engine_name: str = "") -> None:
    """Upgrade database schema and/or data, creating a new revision.
    
    Args:
        engine_name: Database engine name. If not provided, applies to all engines.
    """
    if engine_name and engine_name != "postgresql":
        return
    
    # These are the default bind names from SQLAlchemy
    bind_names = [""] if not engine_name else [engine_name]
    
    for bind_name in bind_names:
        # Create a connection for this bind
        with op.get_context().begin_transaction(bind=bind_name):
            ${upgrades if upgrades else "pass"}


def downgrade(engine_name: str = "") -> None:
    """Downgrade database schema and/or data back to the previous revision.
    
    Args:
        engine_name: Database engine name. If not provided, applies to all engines.
    """
    if engine_name and engine_name != "postgresql":
        return
    
    # These are the default bind names from SQLAlchemy
    bind_names = [""] if not engine_name else [engine_name]
    
    for bind_name in bind_names:
        # Create a connection for this bind
        with op.get_context().begin_transaction(bind=bind_name):
            ${downgrades if downgrades else "pass"}


# Example of how to use the migration:
# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table(
#         'example_table',
#         sa.Column('id', sa.Integer(), nullable=False),
#         sa.Column('name', sa.String(length=255), nullable=False),
#         sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
#         sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), onupdate=sa.text('now()'), nullable=False),
#         sa.PrimaryKeyConstraint('id')
#     )
#     op.create_index(op.f('ix_example_table_name'), 'example_table', ['name'], unique=True)
#     # ### end Alembic commands ###

# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_index(op.f('ix_example_table_name'), table_name='example_table')
#     op.drop_table('example_table')
#     # ### end Alembic commands ###
